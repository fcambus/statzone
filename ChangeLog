StatZone 1.1.2 (2025-03-24)

- Remove unneeded <err.h> include
- Remove useless backslashes in usage()
- Use C++ <cname> headers in a few more places
- Move manual page to the man directory
- Bump cmake_minimum_required to 3.5, to allow building with CMake 4.0
- Bump cmake_minimum_required to 3.10 to be more future proof



StatZone 1.1.1 (2021-11-16)

- Switch to using nullptr instead of NULL
- Fix erroneous comment about timer value in summary()
- Remove code to get zone file size, it's unused
- Update the arpa.zone copy used for testing
- Add SPDX short license identifier in source file
- Use CMAKE_CXX_STANDARD instead of hardcoding compiler flags
- Remove dependency on uthash, it is not used anymore
- Switch to using getline(3) instead of fgets(3)



StatZone 1.1.0 (2021-04-01)

- Remove "USAGE:" prefix when displaying usage information
- Add missing periods when displaying options in usage(), sync README
- StatZone is now a C++ project and requires a C++11 compiler
- Use std::unordered_set instead of uthash to count unique strings
- Remove now unneeded dependency on uthash
- Use std::chrono to calculate elapsed time in summary()
- Remove now unneeded timespecsub macro in compat header
- Remove now unneeded CLOCK_MONOTONIC fallback macro in compat header
- Use iostream to output CSV values
- Start using std::string for domain and previous_domain
- Remove now unused error() function
- Use std::basic_string::compare instead of strncmp(3)
- Add a signal handler for SIGINFO, wrapping summary()
- Remove pledge() support and get rid of the compat directory entirely
- Bump CMake minimum required version to 2.8.12



StatZone 1.0.5 (2021-02-08)

- Stop forcing FORTIFY_SOURCE level 2, it should be package builders decision
- Remove hardcoded program name in the manual page
- Rename displayUsage() and displaySummary() to usage() and summary()
- Get rid of most global variables, move all declarations to main()
- Remove dead increments for argc and argv
- Refactor things to check earlier on if *lineBuffer is not NUL
- Refactor the domain comparison checks, allows removing strdup("") call
- Add an error() function to wrap errx() calls
- Check malloc() and strdup() return value and error out on failed allocations
- Group and initialize uthash struct declarations
- Free previous_domain to appease Clang's static analyzer



StatZone 1.0.4 (2020-10-19)

- Add support for seccomp on arm
- Update error message to use seccomp architecture names
- Improve experimental seccomp support mention in the README
- Make displayUsage() and displaySummary() static
- Set CMAKE_BUILD_TYPE to "Release" in CMakeLists.txt
- Enable FORTIFY_SOURCE level 2



StatZone 1.0.3 (2020-07-06)

- Remove some unneeded seccomp related includes
- Validate architectures for seccomp
- Add seccomp support on i386, tested on glibc and musl
- Use __NR_ instead of SYS_ prefix in #if defined checks



StatZone 1.0.2 (2020-06-10)

- Use CLOCK_REALTIME if CLOCK_MONOTONIC is not available
- Remove unneeded <sys/select.h> include
- Define _GNU_SOURCE in CMakeLists.txt to avoid cluttering source files
- Allow the openat and write syscalls, they are used on glibc systems
- No need to set HAVE_SECCOMP to 1, defining it is enough
- Introduce the displaySummary() function, and use it to print summary
- Move elapsed time calculation in the displaySummary() function
- Add a signal handler for SIGINFO, to display progression on
  supported platforms
- Do not use intermediate variable to calculate elapsed time
- Remove now useless runtime member from the results structure



StatZone 1.0.1 (2020-03-30)

- Add install target for man page
- Add a test case, using the arpa.zone
- Improve program description in README and in the man page
- Lint the manual page, add missing paragraph break macros
- Mention that seccomp is currently only optional



StatZone 1.0.0 (2020-03-22)

- Initial release
